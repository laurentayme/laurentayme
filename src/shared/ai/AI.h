// Generated by dia2code
#ifndef AI__AI__H
#define AI__AI__H

#include <vector>

namespace engine {
  class Engine;
};
namespace state {
  class State;
};
namespace engine {
  class Command;
}

namespace ai {

  /// class AI - 
  class AI {
    // Operations
  public:
    virtual void run (engine::Engine& Engine, int character, state::State& state) = 0;
  protected:
<<<<<<< HEAD
    void listCommands (const state::State& state, int character, std::vector<std::shared_ptr<engine::Command>>& move_list);
||||||| merged common ancestors
    void listCommands (const state::State& state, int character, std::vector<std::unique_ptr<engine::Command>>& move_list);
=======
    void listCommands (const state::State& state, int character, std::vector<engine::Command*>& move_list);
>>>>>>> 330fe8f9d28ecb1a90a2a1445243b9cac34a7a12
    // Setters and Getters
  };

};

#endif
